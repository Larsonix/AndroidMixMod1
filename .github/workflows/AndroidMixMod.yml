name: AndroidMixMod workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'releases/**'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.10

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: ~/.android
          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/build.gradle', '**/build.gradle.kts') }}
          restore-keys: |
            android-sdk-${{ runner.os }}-

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719
          packages: 'platform-tools platforms;android-31 build-tools;30.0.3 ndk;26.3.11579264'

      - name: Cache .NET packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj', '**/*.fsproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

  download:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      apk_name: ${{ steps.set-vars.outputs.apk_name }}
      mixmod_apk_name: ${{ steps.set-vars.outputs.mixmod_apk_name }}
      apk_folder_name: ${{ steps.set-vars.outputs.apk_folder_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create downloads directory
        run: mkdir -p downloads

      - name: Cache Hearthstone APK
        id: apk-cache
        uses: actions/cache@v3
        with:
          path: downloads/hs.apk
          key: hs-apk
          restore-keys: |
            hs-apk-

      - name: Download Hearthstone APK
        if: steps.apk-cache.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          curl -L "${{ secrets.APK_URL }}" -o downloads/hs.apk

      - name: Process Hearthstone APK and set variables
        id: set-vars
        run: |
          apk_name="hs.apk"
          mixmod_apk_name="HearthstoneMixMod_${{ secrets.VERSION }}.apk"
          apk_folder_name="${apk_name%.*}"
          echo "::set-output name=apk_name::${apk_name}"
          echo "::set-output name=mixmod_apk_name::${mixmod_apk_name}"
          echo "::set-output name=apk_folder_name::${apk_folder_name}"

      - name: Cache Apktool
        id: apktool-cache
        uses: actions/cache@v3
        with:
          path: downloads/apktool.jar
          key: apktool-v2.9.3
          restore-keys: |
            apktool-

      - name: Download Apktool
        if: steps.apktool-cache.outputs.cache-hit != 'true'
        run: wget https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar -O downloads/apktool.jar

      - name: Cache Il2CppDumper
        id: il2cpp-cache
        uses: actions/cache@v3
        with:
          path: downloads/Il2CppDumper
          key: il2cppdumper-v6.7.46

      - name: Download Il2CppDumper
        if: steps.il2cpp-cache.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          wget https://github.com/Perfare/Il2CppDumper/releases/download/v6.7.46/Il2CppDumper-net6-v6.7.46.zip -O downloads/Il2CppDumper.zip
          unzip downloads/Il2CppDumper.zip -d downloads/Il2CppDumper
          sed -i "s/\"GenerateDummyDll\": true/\"GenerateDummyDll\": false/" downloads/Il2CppDumper/config.json
          sed -i "s/\"RequireAnyKey\": true/\"RequireAnyKey\": false/" downloads/Il2CppDumper/config.json

      - name: Cache Generator
        id: generator-cache
        uses: actions/cache@v3
        with:
          path: downloads/Generator
          key: generator-latest

      - name: Download Generator
        if: steps.generator-cache.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          wget https://github.com/DeNcHiK3713/Generator/releases/latest/download/Generator-net6.0-linux-x64.zip -O downloads/Generator.zip
          unzip downloads/Generator.zip -d downloads/Generator
          chmod +x downloads/Generator/Generator

      - name: Upload downloads artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloads
          path: downloads

  build:
    runs-on: ubuntu-latest
    needs: download
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Setup .NET 6.0
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: 6.0.x

#      - name: Setup Android SDK Build Tools
#        uses: android-actions/setup-android@v3
#        with:
#          cmdline-tools-version: 12266719
#          packages: 'build-tools;32.0.0'

      - name: Download downloads artifact
        uses: actions/download-artifact@v4
        with:
          name: downloads
          path: downloads

      - name: Decompile Hearthstone APK with Apktool
        run: |
          java -jar $(pwd)/downloads/apktool.jar d $(pwd)/downloads/hs.apk -o downloads/hs
        working-directory: ${{ github.workspace }}

      - name: Set apk_folder_path variable
        run: echo "apk_folder_path=$(pwd)/hs" >> $GITHUB_ENV
        working-directory: downloads

      - name: Save original files before patch
        run: |
          mkdir -p $GITHUB_WORKSPACE/original_files
          cd downloads/hs
          cp --parents \
            AndroidManifest.xml \
            smali/com/blizzard/mobile/auth/internal/packagevalidator/BasePackageValidator.smali \
            smali/com/blizzard/wtcg/hearthstone/FileUtils.smali \
            smali/com/blizzard/wtcg/hearthstone/HearthstoneActivity.smali \
            smali/com/blizzard/wtcg/hearthstone/LoadingScreen.smali \
            apktool.yml \
            $GITHUB_WORKSPACE/original_files
          cd $GITHUB_WORKSPACE
      - name: Archive original files
        run: |
          tar -czf original_files.tar.gz original_files
      - name: Upload original files artifact
        uses: actions/upload-artifact@v4
        with:
          name: original-files
          path: original_files.tar.gz

      - name: Apply patch with conflict output
        run: |
          git apply --reject ${{ github.workspace }}/0004-AndroidMixMod.patch
        working-directory: ${{ github.workspace }}

      - name: Find rej
        run: |
          find . -name "*.rej" || echo "No .rej files found."

      - name: Save patched files after patch
        run: |
          mkdir -p $GITHUB_WORKSPACE/patched_files
          cd downloads/hs
          cp --parents \
            AndroidManifest.xml \
            smali/com/blizzard/mobile/auth/internal/packagevalidator/BasePackageValidator.smali \
            smali/com/blizzard/wtcg/hearthstone/FileUtils.smali \
            smali/com/blizzard/wtcg/hearthstone/HearthstoneActivity.smali \
            smali/com/blizzard/wtcg/hearthstone/LoadingScreen.smali \
            apktool.yml \
            $GITHUB_WORKSPACE/patched_files
          cd $GITHUB_WORKSPACE
      - name: Archive patched files
        run: |
          tar -czf patched_files.tar.gz patched_files
      - name: Upload patched files artifact
        uses: actions/upload-artifact@v4
        with:
          name: patched-files
          path: patched_files.tar.gz
#
#      - name: Dump with Il2CppDumper
#        run: |
#          mkdir -p arm64-v8a
#          dotnet Il2CppDumper/Il2CppDumper.dll hs/lib/arm64-v8a/libil2cpp.so hs/assets/bin/Data/Managed/Metadata/global-metadata.dat arm64-v8a/
#          dotnet Il2CppDumper/Il2CppDumper.dll hs/lib/arm64-v8a/libil2cpp.so hs/assets/bin/Data/Managed/Metadata/global-metadata.dat arm64-v8a/ --no-cpp
#        working-directory: downloads
#
#      - name: Generate offsets
#        run: |
#          chmod +x Generator/Generator
#          Generator/Generator ${{ github.workspace }}/OffsetsTemplate.json arm64-v8a/script.json hs/lib/arm64-v8a/libil2cpp.so ARM64 >> ${{ github.workspace }}/app/src/main/jni/Includes/Offsets.h
#        working-directory: downloads
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: |
#          ./gradlew clean
#          ./gradlew build
#
#      - name: Decompile apk
#        run: java -jar downloads/apktool.jar d ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk -o MixMod
#
#      - name: Modify Hearthstone apk
#        run: |
#          smali_dirs=(./downloads/hs/smali*)
#          last_smali_dir="${smali_dirs[${#smali_dirs[@]}-1]}"
#          cp -R MixMod/smali/* "$last_smali_dir"
#          cp -R MixMod/lib/* ./downloads/hs/lib/
#
#      - name: Recompile Hearthstone apk
#        run: |
#          mkdir -p Release
#          java -jar downloads/apktool.jar b downloads/hs -o ./Release/HearthstoneMixMod_${{ secrets.VERSION }}.apk
#
#      - name: Signing Hearthstone apk
#        uses: kevin-david/zipalign-sign-android-release@v1.1
#        id: sign_app
#        with:
#          releaseDirectory: Release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#          zipAlign: true
#
#      - name: Prepare to release
#        run: |
#          mkdir -p Release/signed
#          mv ${{ steps.sign_app.outputs.signedReleaseFile }} Release/signed/HearthstoneMixMod_${{ secrets.VERSION }}.apk
#
#      - name: Create Release
#        uses: ncipollo/release-action@v1
#        with:
#          tag: "${{ secrets.VERSION }}"
#          name: "v. ${{ secrets.VERSION }}"
#          artifacts: "Release/signed/HearthstoneMixMod_${{ secrets.VERSION }}.apk"
